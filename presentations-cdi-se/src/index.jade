doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Java SE and CDI 2.0

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h1 Making the Most of Java SE with CDI 2.0

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h4 Who am I?
        p.small John D. Ament
        p.small Architect at Sparta Systems
        p.small CDI Expert Group Member
        p.small JMS Expert Group Member
        p.small Apache DeltaSpike PMC
        p.small Apache ActiveMQ Committer
        p.small Hammock Project creator - CDI based Microservices
        p.strong.small http://github.com/hammock-project
        
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Moving CDI Beyond EE
        p CDI 2.0 introduced some basic support for Java SE
        p We want your feedback!
        p.strong http://cdi-spec.org/

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Slide Info
        p Slide and code samples
        p.strong.small https://github.com/johnament/cdi-2.0-presentations  
        
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2.bullet Projects Supporting <br/>CDI SE
        p.bullet Apache DeltaSpike
        p.bullet Apache Camel
        p.bullet Hammock
        p.bullet PAX-CDI
        p.bullet JBoss Weld
        p.bullet Microprofile
        p.bullet Apache OpenWebBeans
        
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 SeContainerInitializer
        h3 Simple Bootstrapping!
        pre
          code.language-javascript.
            try(SeContainer container = 
                  SeContainerInitializer
                    .newInstance()
                    .initialize()) { }
            
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 SeContainer
        h3.bullet A handle for the CDI runtime
        p.bullet AutoCloseable
        p.bullet Has access to BeanManager
        p.bullet Extends Instance
        p.bullet Can still use CDI.current() in SE mode

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Controlling the Classpath
        h3 You can disable discovery, and explicitly add beans
        pre
          code.language-javascript.
            try(SeContainer container = SeContainerInitializer
              .newInstance()
              .addPackages(Bean.class)
              .disableDiscovery()
              .initialize()) {
            }

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Highly configurable
        h3 Enable Alternatives, Stereotypes, Decorators, Extensions
        pre
          code.language-javascript.
            SeContainerInitializer
              .newInstance().addExtensions()
              .enableDecorators()
              .selectAlternativeStereotypes()
              .selectAlternatives().addProperty()

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2.bullet Request Context Management
        br
        p Is context management a developer concern or a framework concern?
        p.bullet We couldn't decide!

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Request Context
        br
        h4 Built in bean for starting and stopping request contexts
        pre
          code.language-javascript.
            @Inject RequestContextController 
                requestContextController;
            boolean started = 
                requestContextController.activate();
            // do some work
            if(started) requestContextController.deactivate();
            
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Request Context
        br
        h4 Built in interceptor to handle it automatically
        pre
          code.language-javascript.
            @ActivateRequestContext
            public void doSomeWork() { }
            
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2.bullet Threading and Events
        br
        h4 Async events allow custom executors
        h4 Synchronous events are always within the same thread
        h4.bullet So how do we leverage both behaviors?

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2.bullet Threading and Events
        br
        h4 Sync Events may need Request Scope to be Active
        pre
          code.language-javascript.
            @Inject Event<Pojo> pojoEvent;
            @ActivateRequestContext
            public void sender() {
                pojoEvent.fire(pojo);
            }
            void syncReceiver(@Observes Pojo pojo) { }

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2.bullet Demo Time..

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2.bullet Thanks & Questions

    script(src='build/build.js')
